class FileVTK:
    def __init__(self):
        self.version = 3.0
        self.generator = 'easyPDE'
        self.encoding = 'ASCII'
        self.dataset = 'UNSTRUCTURED_GRID'
        self.points = []
        self.cells = []
        self.node_num = 0
        self.cell_types = []
        self.cell_datas = []

    def addPoint(self, point):
        self.points.append(point)

    def addCell(self, cell, cell_type):
        length = len(cell)
        self.node_num += length
        self.cells.append(cell)
        self.cell_types.append(cell_type)

    def addCellData(self, cell_data):
        self.cell_datas.append(cell_data)

    def write2vtk(self, vtk_filename):
        if len(self.cells) != len(self.cell_types) or len(self.cells) != len(self.cell_datas):
            print('cells number != cell_types/cell_datas number !')
            return
        f=open(vtk_filename, 'a+')
        f.write('# vtk DataFile Version ' + str(self.version) + '\n')
        f.write('Generated by ' + self.generator + '\n')
        f.write(self.encoding + '\n')
        f.write('DATASET ' + self.dataset + '\n')

        self._write_points(f)
        self._write_cells(f)
        self._write_cell_types(f)
        self._write_cell_datas(f)
        f.close()

    def _write_points(self, file):
        file.write('POINTS ' + str(len(self.points)) + ' double\n')
        for point in self.points:
            file.write(str(point[0]) + ' ' + str(point[1]) + ' ' + str(point[2]) + '\n')

    def _write_cells(self, file):
        file.write('CELLS ' + str(len(self.cells)) +' '+ str(self.node_num+len(self.cells))+'\n')
        for cell in self.cells:
            file.write(str(len(cell)) + ' ')
            file.write(str(cell[0]) + ' '+str(cell[1]) + ' '+str(cell[5]) + ' '+str(cell[4]) + ' ')
            file.write(str(cell[3]) + ' ' + str(cell[2]) + ' ' + str(cell[6]) + ' ' + str(cell[7]) + ' ')
            # for element in cell:
            #     file.write(str(element) + ' ')
            file.write('\n')

    def _write_cell_types(self, file):
        file.write('CELL_TYPES ' + str(len(self.cells)) +'\n')
        for cell_type in self.cell_types:
            file.write(str(cell_type) + '\n')

    def _write_cell_datas(self, file):
        file.write('CELL_DATA ' + str(len(self.cells)) + '\n')
        file.write('SCALARS Temperature double\n')
        file.write('LOOKUP_TABLE default\n')
        for cell_data in self.cell_datas:
            file.write(str(cell_data) + '\n')

